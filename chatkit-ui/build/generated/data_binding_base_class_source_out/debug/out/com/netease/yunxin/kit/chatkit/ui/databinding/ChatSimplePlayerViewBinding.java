// Generated by view binder compiler. Do not edit!
package com.netease.yunxin.kit.chatkit.ui.databinding;

import android.view.LayoutInflater;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.netease.yunxin.kit.chatkit.ui.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatSimplePlayerViewBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final ImageView videoPlay;

  @NonNull
  public final LinearProgressIndicator videoProgress;

  @NonNull
  public final ImageView videoProgressAction;

  @NonNull
  public final Group videoProgressLayout;

  @NonNull
  public final TextView videoProgressTime;

  @NonNull
  public final TextView videoTotalTime;

  @NonNull
  public final SurfaceView videoView;

  private ChatSimplePlayerViewBinding(@NonNull View rootView, @NonNull ImageView videoPlay,
      @NonNull LinearProgressIndicator videoProgress, @NonNull ImageView videoProgressAction,
      @NonNull Group videoProgressLayout, @NonNull TextView videoProgressTime,
      @NonNull TextView videoTotalTime, @NonNull SurfaceView videoView) {
    this.rootView = rootView;
    this.videoPlay = videoPlay;
    this.videoProgress = videoProgress;
    this.videoProgressAction = videoProgressAction;
    this.videoProgressLayout = videoProgressLayout;
    this.videoProgressTime = videoProgressTime;
    this.videoTotalTime = videoTotalTime;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatSimplePlayerViewBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.chat_simple_player_view, parent);
    return bind(parent);
  }

  @NonNull
  public static ChatSimplePlayerViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.video_play;
      ImageView videoPlay = ViewBindings.findChildViewById(rootView, id);
      if (videoPlay == null) {
        break missingId;
      }

      id = R.id.video_progress;
      LinearProgressIndicator videoProgress = ViewBindings.findChildViewById(rootView, id);
      if (videoProgress == null) {
        break missingId;
      }

      id = R.id.video_progress_action;
      ImageView videoProgressAction = ViewBindings.findChildViewById(rootView, id);
      if (videoProgressAction == null) {
        break missingId;
      }

      id = R.id.video_progress_layout;
      Group videoProgressLayout = ViewBindings.findChildViewById(rootView, id);
      if (videoProgressLayout == null) {
        break missingId;
      }

      id = R.id.video_progress_time;
      TextView videoProgressTime = ViewBindings.findChildViewById(rootView, id);
      if (videoProgressTime == null) {
        break missingId;
      }

      id = R.id.video_total_time;
      TextView videoTotalTime = ViewBindings.findChildViewById(rootView, id);
      if (videoTotalTime == null) {
        break missingId;
      }

      id = R.id.video_view;
      SurfaceView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new ChatSimplePlayerViewBinding(rootView, videoPlay, videoProgress,
          videoProgressAction, videoProgressLayout, videoProgressTime, videoTotalTime, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
