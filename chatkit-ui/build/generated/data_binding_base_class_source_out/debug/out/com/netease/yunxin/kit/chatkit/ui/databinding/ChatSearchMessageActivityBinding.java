// Generated by view binder compiler. Do not edit!
package com.netease.yunxin.kit.chatkit.ui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.netease.yunxin.kit.chatkit.ui.R;
import com.netease.yunxin.kit.common.ui.widgets.BackTitleBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatSearchMessageActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout emptyLl;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final ImageView ivClear;

  @NonNull
  public final ImageView ivEmpty;

  @NonNull
  public final BackTitleBar messageSearchTitleBar;

  @NonNull
  public final RecyclerView rvSearch;

  private ChatSearchMessageActivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout emptyLl, @NonNull EditText etSearch, @NonNull ImageView ivClear,
      @NonNull ImageView ivEmpty, @NonNull BackTitleBar messageSearchTitleBar,
      @NonNull RecyclerView rvSearch) {
    this.rootView = rootView;
    this.emptyLl = emptyLl;
    this.etSearch = etSearch;
    this.ivClear = ivClear;
    this.ivEmpty = ivEmpty;
    this.messageSearchTitleBar = messageSearchTitleBar;
    this.rvSearch = rvSearch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatSearchMessageActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatSearchMessageActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_search_message_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatSearchMessageActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_ll;
      LinearLayout emptyLl = ViewBindings.findChildViewById(rootView, id);
      if (emptyLl == null) {
        break missingId;
      }

      id = R.id.etSearch;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.ivClear;
      ImageView ivClear = ViewBindings.findChildViewById(rootView, id);
      if (ivClear == null) {
        break missingId;
      }

      id = R.id.ivEmpty;
      ImageView ivEmpty = ViewBindings.findChildViewById(rootView, id);
      if (ivEmpty == null) {
        break missingId;
      }

      id = R.id.message_search_title_bar;
      BackTitleBar messageSearchTitleBar = ViewBindings.findChildViewById(rootView, id);
      if (messageSearchTitleBar == null) {
        break missingId;
      }

      id = R.id.rvSearch;
      RecyclerView rvSearch = ViewBindings.findChildViewById(rootView, id);
      if (rvSearch == null) {
        break missingId;
      }

      return new ChatSearchMessageActivityBinding((ConstraintLayout) rootView, emptyLl, etSearch,
          ivClear, ivEmpty, messageSearchTitleBar, rvSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
