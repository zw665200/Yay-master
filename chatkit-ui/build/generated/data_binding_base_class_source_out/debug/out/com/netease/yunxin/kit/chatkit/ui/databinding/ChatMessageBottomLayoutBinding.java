// Generated by view binder compiler. Do not edit!
package com.netease.yunxin.kit.chatkit.ui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.netease.yunxin.kit.chatkit.ui.R;
import com.netease.yunxin.kit.chatkit.ui.view.emoji.EmojiPickerView;
import com.netease.yunxin.kit.chatkit.ui.view.input.RecordView;
import com.netease.yunxin.kit.common.ui.widgets.RoundFrameLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatMessageBottomLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView chatMessageActionContainer;

  @NonNull
  public final ViewPager2 chatMessageActionsPanel;

  @NonNull
  public final Group chatMessageEditInput;

  @NonNull
  public final EmojiPickerView chatMessageEmojiView;

  @NonNull
  public final FrameLayout chatMessageInputContainer;

  @NonNull
  public final EditText chatMessageInputEt;

  @NonNull
  public final RoundFrameLayout chatMessageInputLayout;

  @NonNull
  public final RecordView chatMessageRecordView;

  @NonNull
  public final TextView chatMessageVoiceInTip;

  @NonNull
  public final ImageView ivReplyClose;

  @NonNull
  public final LinearLayout llyReply;

  @NonNull
  public final TextView tvReplyContent;

  private ChatMessageBottomLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView chatMessageActionContainer, @NonNull ViewPager2 chatMessageActionsPanel,
      @NonNull Group chatMessageEditInput, @NonNull EmojiPickerView chatMessageEmojiView,
      @NonNull FrameLayout chatMessageInputContainer, @NonNull EditText chatMessageInputEt,
      @NonNull RoundFrameLayout chatMessageInputLayout, @NonNull RecordView chatMessageRecordView,
      @NonNull TextView chatMessageVoiceInTip, @NonNull ImageView ivReplyClose,
      @NonNull LinearLayout llyReply, @NonNull TextView tvReplyContent) {
    this.rootView = rootView;
    this.chatMessageActionContainer = chatMessageActionContainer;
    this.chatMessageActionsPanel = chatMessageActionsPanel;
    this.chatMessageEditInput = chatMessageEditInput;
    this.chatMessageEmojiView = chatMessageEmojiView;
    this.chatMessageInputContainer = chatMessageInputContainer;
    this.chatMessageInputEt = chatMessageInputEt;
    this.chatMessageInputLayout = chatMessageInputLayout;
    this.chatMessageRecordView = chatMessageRecordView;
    this.chatMessageVoiceInTip = chatMessageVoiceInTip;
    this.ivReplyClose = ivReplyClose;
    this.llyReply = llyReply;
    this.tvReplyContent = tvReplyContent;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatMessageBottomLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatMessageBottomLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_message_bottom_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatMessageBottomLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chat_message_action_container;
      RecyclerView chatMessageActionContainer = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageActionContainer == null) {
        break missingId;
      }

      id = R.id.chat_message_actions_panel;
      ViewPager2 chatMessageActionsPanel = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageActionsPanel == null) {
        break missingId;
      }

      id = R.id.chat_message_edit_input;
      Group chatMessageEditInput = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageEditInput == null) {
        break missingId;
      }

      id = R.id.chat_message_emoji_view;
      EmojiPickerView chatMessageEmojiView = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageEmojiView == null) {
        break missingId;
      }

      id = R.id.chat_message_input_container;
      FrameLayout chatMessageInputContainer = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageInputContainer == null) {
        break missingId;
      }

      id = R.id.chat_message_input_et;
      EditText chatMessageInputEt = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageInputEt == null) {
        break missingId;
      }

      id = R.id.chat_message_input_layout;
      RoundFrameLayout chatMessageInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageInputLayout == null) {
        break missingId;
      }

      id = R.id.chat_message_record_view;
      RecordView chatMessageRecordView = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageRecordView == null) {
        break missingId;
      }

      id = R.id.chat_message_voice_in_tip;
      TextView chatMessageVoiceInTip = ViewBindings.findChildViewById(rootView, id);
      if (chatMessageVoiceInTip == null) {
        break missingId;
      }

      id = R.id.iv_reply_close;
      ImageView ivReplyClose = ViewBindings.findChildViewById(rootView, id);
      if (ivReplyClose == null) {
        break missingId;
      }

      id = R.id.llyReply;
      LinearLayout llyReply = ViewBindings.findChildViewById(rootView, id);
      if (llyReply == null) {
        break missingId;
      }

      id = R.id.tvReplyContent;
      TextView tvReplyContent = ViewBindings.findChildViewById(rootView, id);
      if (tvReplyContent == null) {
        break missingId;
      }

      return new ChatMessageBottomLayoutBinding((ConstraintLayout) rootView,
          chatMessageActionContainer, chatMessageActionsPanel, chatMessageEditInput,
          chatMessageEmojiView, chatMessageInputContainer, chatMessageInputEt,
          chatMessageInputLayout, chatMessageRecordView, chatMessageVoiceInTip, ivReplyClose,
          llyReply, tvReplyContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
