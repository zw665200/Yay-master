// Generated by view binder compiler. Do not edit!
package com.netease.yunxin.kit.contactkit.ui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.netease.yunxin.kit.common.ui.widgets.BackTitleBar;
import com.netease.yunxin.kit.contactkit.ui.R;
import com.netease.yunxin.kit.contactkit.ui.view.ContactListView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BaseListActivityLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ContactListView contactListView;

  @NonNull
  public final BackTitleBar title;

  @NonNull
  public final TextView tvTips;

  private BaseListActivityLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull ContactListView contactListView, @NonNull BackTitleBar title,
      @NonNull TextView tvTips) {
    this.rootView = rootView;
    this.contactListView = contactListView;
    this.title = title;
    this.tvTips = tvTips;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BaseListActivityLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BaseListActivityLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.base_list_activity_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BaseListActivityLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contact_listView;
      ContactListView contactListView = ViewBindings.findChildViewById(rootView, id);
      if (contactListView == null) {
        break missingId;
      }

      id = R.id.title;
      BackTitleBar title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.tv_Tips;
      TextView tvTips = ViewBindings.findChildViewById(rootView, id);
      if (tvTips == null) {
        break missingId;
      }

      return new BaseListActivityLayoutBinding((LinearLayout) rootView, contactListView, title,
          tvTips);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
