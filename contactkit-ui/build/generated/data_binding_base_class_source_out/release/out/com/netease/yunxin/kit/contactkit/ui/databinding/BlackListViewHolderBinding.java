// Generated by view binder compiler. Do not edit!
package com.netease.yunxin.kit.contactkit.ui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.netease.yunxin.kit.common.ui.widgets.ContactAvatarView;
import com.netease.yunxin.kit.contactkit.ui.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BlackListViewHolderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView_;

  @NonNull
  public final ContactAvatarView avatarView;

  @NonNull
  public final ConstraintLayout rootView;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvRelieve;

  private BlackListViewHolderBinding(@NonNull ConstraintLayout rootView_,
      @NonNull ContactAvatarView avatarView, @NonNull ConstraintLayout rootView,
      @NonNull TextView tvName, @NonNull TextView tvRelieve) {
    this.rootView_ = rootView_;
    this.avatarView = avatarView;
    this.rootView = rootView;
    this.tvName = tvName;
    this.tvRelieve = tvRelieve;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static BlackListViewHolderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BlackListViewHolderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.black_list_view_holder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BlackListViewHolderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatar_view;
      ContactAvatarView avatarView = ViewBindings.findChildViewById(rootView, id);
      if (avatarView == null) {
        break missingId;
      }

      ConstraintLayout rootView_ = (ConstraintLayout) rootView;

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_relieve;
      TextView tvRelieve = ViewBindings.findChildViewById(rootView, id);
      if (tvRelieve == null) {
        break missingId;
      }

      return new BlackListViewHolderBinding((ConstraintLayout) rootView, avatarView, rootView_,
          tvName, tvRelieve);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
