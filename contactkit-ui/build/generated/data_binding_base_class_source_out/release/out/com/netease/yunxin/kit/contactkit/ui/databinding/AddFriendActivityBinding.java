// Generated by view binder compiler. Do not edit!
package com.netease.yunxin.kit.contactkit.ui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.netease.yunxin.kit.contactkit.ui.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddFriendActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout addFriendEmptyLayout;

  @NonNull
  public final TextView addFriendEmptyTv;

  @NonNull
  public final EditText etAddFriendAccount;

  @NonNull
  public final ImageView ivAddFriendBack;

  @NonNull
  public final ImageView ivFriendClear;

  @NonNull
  public final LinearLayout layoutAddFriendInput;

  @NonNull
  public final LinearLayout layoutAddFriendTitle;

  @NonNull
  public final TextView tvAddFriendMore;

  @NonNull
  public final TextView tvAddFriendTitle;

  private AddFriendActivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout addFriendEmptyLayout, @NonNull TextView addFriendEmptyTv,
      @NonNull EditText etAddFriendAccount, @NonNull ImageView ivAddFriendBack,
      @NonNull ImageView ivFriendClear, @NonNull LinearLayout layoutAddFriendInput,
      @NonNull LinearLayout layoutAddFriendTitle, @NonNull TextView tvAddFriendMore,
      @NonNull TextView tvAddFriendTitle) {
    this.rootView = rootView;
    this.addFriendEmptyLayout = addFriendEmptyLayout;
    this.addFriendEmptyTv = addFriendEmptyTv;
    this.etAddFriendAccount = etAddFriendAccount;
    this.ivAddFriendBack = ivAddFriendBack;
    this.ivFriendClear = ivFriendClear;
    this.layoutAddFriendInput = layoutAddFriendInput;
    this.layoutAddFriendTitle = layoutAddFriendTitle;
    this.tvAddFriendMore = tvAddFriendMore;
    this.tvAddFriendTitle = tvAddFriendTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddFriendActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddFriendActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_friend_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddFriendActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_friend_empty_layout;
      LinearLayout addFriendEmptyLayout = ViewBindings.findChildViewById(rootView, id);
      if (addFriendEmptyLayout == null) {
        break missingId;
      }

      id = R.id.add_friend_empty_tv;
      TextView addFriendEmptyTv = ViewBindings.findChildViewById(rootView, id);
      if (addFriendEmptyTv == null) {
        break missingId;
      }

      id = R.id.et_add_friend_account;
      EditText etAddFriendAccount = ViewBindings.findChildViewById(rootView, id);
      if (etAddFriendAccount == null) {
        break missingId;
      }

      id = R.id.iv_add_friend_back;
      ImageView ivAddFriendBack = ViewBindings.findChildViewById(rootView, id);
      if (ivAddFriendBack == null) {
        break missingId;
      }

      id = R.id.iv_friend_clear;
      ImageView ivFriendClear = ViewBindings.findChildViewById(rootView, id);
      if (ivFriendClear == null) {
        break missingId;
      }

      id = R.id.layout_add_friend_input;
      LinearLayout layoutAddFriendInput = ViewBindings.findChildViewById(rootView, id);
      if (layoutAddFriendInput == null) {
        break missingId;
      }

      id = R.id.layout_add_friend_title;
      LinearLayout layoutAddFriendTitle = ViewBindings.findChildViewById(rootView, id);
      if (layoutAddFriendTitle == null) {
        break missingId;
      }

      id = R.id.tv_add_friend_more;
      TextView tvAddFriendMore = ViewBindings.findChildViewById(rootView, id);
      if (tvAddFriendMore == null) {
        break missingId;
      }

      id = R.id.tv_add_friend_title;
      TextView tvAddFriendTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAddFriendTitle == null) {
        break missingId;
      }

      return new AddFriendActivityBinding((ConstraintLayout) rootView, addFriendEmptyLayout,
          addFriendEmptyTv, etAddFriendAccount, ivAddFriendBack, ivFriendClear,
          layoutAddFriendInput, layoutAddFriendTitle, tvAddFriendMore, tvAddFriendTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
